int blockSize = 20;

int[][] blocks;

Shape shape1;

void setup() {


  size (400, 600);

  blocks = new int[width/blockSize][height/blockSize];
  
  //frameRate(1);
  
  shape1 = new Shape(0);
 

}


void draw() {
 background(255);
  
  //redraw
  
  for (int x=0; x<width/blockSize; x++) {
    for (int y=0; y<height/blockSize; y++) {
      for (int i=0; i<shape1.getArr().length; i++) {
        if (x==shape1.getArr()[i][0] && y==shape1.getArr()[i][1]) {
        blocks[x][y] = 0;
        }
      }
    }
  }
  

//extend down
if(frameCount%60 == 0) shape1.update();
  
if (keyPressed == true && frameCount%4==0){
        
        if (key == CODED){
    if (keyCode == RIGHT){
      shape1.update2();
      println("yay");
    }
  }
     
  if (key == CODED){
    if (keyCode == LEFT){
      shape1.update3();
      println("woo");
     }
  }
}


  


//shape
  for (int x=0; x<width/blockSize; x++) {
    for (int y=0; y<height/blockSize; y++) {
      for (int i=0; i<shape1.getArr().length; i++) {
        if (x==shape1.getArr()[i][0] && y==shape1.getArr()[i][1]) {
          println(shape1.getArr()[0][1]);
          blocks[x][y] = 1;
        }
      }
    }
  }



//grid
  for (int x=0; x<width/blockSize; x++) {
    for (int y=0; y<height/blockSize; y++) {
      if (blocks[x][y]==1) {
        fill(0);
      } else {
        fill(255);
      }
      rect (x*blockSize, y*blockSize, blockSize, blockSize);
      
    }
  }
  

}

